{"version":3,"sources":["C:/xampp/htdocs/graf/angular/src/app/pages-simples/loginf/loginf.component.html","C:/xampp/htdocs/graf/angular/src/app/pages-simples/loginf/loginf.component.scss","C:/xampp/htdocs/graf/angular/src/app/pages-simples/loginf/loginf.component.ts","C:/xampp/htdocs/graf/angular/src/app/pages-simples/loginf/loginf.module.ts","C:/xampp/htdocs/graf/angular/src/app/pages-simples/pages-simples-routing.module.ts","C:/xampp/htdocs/graf/angular/src/app/pages-simples/pages-simples.component.ts","C:/xampp/htdocs/graf/angular/src/app/pages-simples/pages-simples.module.ts"],"names":[],"mappings":";;;;;AAAA,siCAAsiC,gQAAgQ,0PAA0P,aAAa,oBAAoB,qFAAqF,mVAAmV,8MAA8M,oJAAoJ,sNAAsN,qeAAqe,8BAA8B,+C;;;;;;;ACApiG;AACA;;;AAGA;AACA,u2FAAw2F,oBAAoB,EAAE,0BAA0B,qCAAqC,EAAE,0BAA0B,cAAc,EAAE,iCAAiC,iBAAiB,EAAE,+BAA+B,yBAAyB,yBAAyB,kBAAkB,EAAE,+BAA+B,gGAAgG,iBAAiB,EAAE,0BAA0B,uBAAuB,oBAAoB,EAAE,EAAE,0BAA0B,4CAA4C,kDAAkD,EAAE;;AAEv9G;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXkD;AACgB;AAEa;AAE/E,aAAa;AACiD;AACzB;AAEwC;AAEW;AACrC;AAQnD;IA0BC,yBAAqB,cAA8B,EACvC,IAAgB,EAChB,WAA4B,EAC5B,MAAc,EACd,KAAqB,EACtB,gBAAiC,EACjC,YAA2B;QANjB,mBAAc,GAAd,cAAc,CAAgB;QACvC,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAiB;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACtB,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,iBAAY,GAAZ,YAAY,CAAe;QA3BtC,aAAQ,GAAG,iBAAiB,CAAC;QAC7B,kBAAa,GAAG,MAAM,CAAC;QACvB,UAAK,GAAG,WAAW,CAAC;QACpB,YAAO,GAAG,mBAAmB,CAAC;QAC9B,YAAO,GAAG,IAAI,CAAC;QACf,gBAAW,GAAG,CAAC,CAAC;QAChB,SAAI,GAAG,SAAS,CAAC,CAAC,mDAAmD;QAErE,kBAAa,GAAG,IAAI,CAAC;QACrB,kBAAa,GAAG,IAAI,CAAC;QACrB,0BAAqB,GAAG,KAAK,CAAC;QAC9B,kBAAa,GAAG,IAAI,CAAC;QACrB,iBAAiB;QAEjB,UAAK,GAAE,EAAE;QACT,aAAQ,GAAC,EAAE,CAAC;QAEL,YAAO,GAAG,KAAK,CAAC;QAEvB,cAAS,GAAG,KAAK,CAAC;QAWjB,0BAA0B;QAC1B,2BAA2B;IAC5B,CAAC;IAED,kCAAQ,GAAR;QACC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACxC,2CAA2C;QAE3C,+BAA+B;QAE/B,IAAI,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAE1C,SAAS,CAAC,IAAI,CAAC;YACV,kCAAkC;YAClC,SAAS,CAAC,SAAS,CAAC,UAAS,MAAM;gBAClC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACnB,YAAY,CAAC,OAAO,CAAC,4BAA4B,EAAE,MAAM,CAAC,CAAC;gBAC3D,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACb,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;oBACjC,SAAS,CAAC,IAAI,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC;gBAClD,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IAEP,CAAC;IAEO,mCAAS,GAAjB,UAAkB,IAAY,EAAE,KAAa,EAAE,IAAY;QACvD,IAAI,CAAC,MAAM,GAAG,IAAI,uEAAa,CAAC;YAC9B,aAAa,EAAE,IAAI,CAAC,QAAQ;YAC5B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,WAAW,EAAE,IAAI,CAAC,aAAa;YAC/B,YAAY,EAAE,IAAI,CAAC,aAAa;YAChC,iBAAiB,EAAE,IAAI,CAAC,qBAAqB;YAC7C,SAAS,EAAE,IAAI,CAAC,aAAa;YAC7B,KAAK,EAAE,IAAI,CAAC,WAAW;SACxB,CAAC,CAAC;QACH,IAAM,KAAK,GAAU;YACnB,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,eAAe,EAAE,IAAI,CAAC,aAAa;YACnC,cAAc,EAAE,wEAAc,CAAC,WAAW;SAC3C,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAED,kCAAQ,GAAR;QAAA,iBAqDG;QAnDA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACrB,gDAAgD;QAEhD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAC;QAChE,IAAI,KAAK,GAAE;YACV,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,kBAAkB,EAAE,YAAY,CAAC,OAAO,CAAC,4BAA4B,CAAC;SACtE;QAEJ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,GAAC,WAAW,EAAE,KAAK,CAAC;aAC/D,SAAS,EAAE;aACX,IAAI,CACH,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,IAAI,GAAC,IAAI,CAAC;YACf,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvD,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC3D,YAAY,CAAC,OAAO,CAAC,qBAAqB,EAAE,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACnE,YAAY,CAAC,OAAO,CAAC,qBAAqB,EAAE,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACnE,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACxE,yFAAyF;YAExF,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC;gBACtC,YAAY,CAAC,OAAO,CAAC,4BAA4B,EAAE,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;YACvF,CAAC;YAAA,IAAI,EAAC;gBACL,YAAY,CAAC,OAAO,CAAC,4BAA4B,EAAE,EAAE,CAAC,CAAC;YACxD,CAAC;YAED,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC;gBACtC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;gBACjD,kCAAkC;YAChC,CAAC;YAAA,IAAI,CAAC,EAAE,EAAC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,EAAC;gBAC1C,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;gBACpD,kCAAkC;YAChC,CAAC;YAED,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAExB,CAAC,EACA,aAAG;YAED,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YACjB,+BAA+B;YAC/B,mCAAmC;YACnC,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACnD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACxB,CAAC,CACF,CAAC;IACD,CAAC;IAvIS,eAAe;QAN3B,gEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAIvB,CAAC;yCA2BoC,wEAAc;YACjC,wEAAU;YACH,8FAAe;YACpB,+DAAM;YACP,uEAAc;YACL,wEAAgB;YACpB,sEAAc;OAhC1B,eAAe,CAwI3B;IAAD,sBAAC;CAAA;AAxI2B;;;;;;;;;;;;;;;;;;;;;ACpBa;AAEzC,aAAa;AAC2C;AACH;AAIJ;AAEa;AAqB9D;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAnBxB,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACR,uEAAa;gBACZ,wEAAW;gBACX,kEAAa,CAAC,OAAO,CAAC;oBAClB,aAAa,EAAE,oEAAe,CAAC,WAAW;oBAC1C,wBAAwB,EAAE,iBAAiB;oBAC3C,oBAAoB,EAAE,KAAK;oBAC3B,aAAa,EAAE,SAAS;oBACxB,eAAe,EAAE,SAAS;oBAC1B,cAAc,EAAE,SAAS;oBACzB,kBAAkB,EAAE,IAAI;iBAC3B,CAAC;aACH;YACD,YAAY,EAAE;gBACZ,0EAAe;aAEhB;SACF,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;AC/B8B;AACd;AAEyB;AACN;AAE5D,IAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uFAAqB;QAChC,QAAQ,EAAE,CAAC;gBACT,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,iFAAe;aAC3B,EAAE;gBACD,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,QAAQ;gBACpB,SAAS,EAAE,MAAM;aAClB,CAAC;KACH,CAAC,CAAC;AAMH;IAAA;IACA,CAAC;IADY,yBAAyB;QAJrC,+DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,qEAAY,CAAC;SACxB,CAAC;OACW,yBAAyB,CACrC;IAAD,gCAAC;CAAA;AADqC;;;;;;;;;;;;;;;;;ACvBI;AAS1C;IAAA;IAEA,CAAC;IAFY,qBAAqB;QANjC,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,QAAQ,EAAE,6CAET;SACF,CAAC;OACW,qBAAqB,CAEjC;IAAD,4BAAC;CAAA;AAFiC;;;;;;;;;;;;;;;;;;;;;;ACTO;AAEzC,aAAa;AACqD;AACZ;AACqB;AACtB;AAErD,mDAAmD;AAEnD,IAAM,uBAAuB,GAAG;IAC9B,uFAAqB;CACtB,CAAC;AAaF;IAAA;IACA,CAAC;IADY,kBAAkB;QAX9B,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACR,gBAAgB;gBACf,gGAAyB;gBACzB,wEAAW;gBACX,2EAAY;aACb;YACD,YAAY,EACP,uBAAuB,QAC3B;SACF,CAAC;OACW,kBAAkB,CAC9B;IAAD,yBAAC;CAAA;AAD8B","file":"pages-simples.module.chunk.js","sourcesContent":["module.exports = \"<!-- <div class=\\\"container\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    Inicio de sesión loginf\\r\\n      \\r\\n        <form>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"exampleInputEmail1\\\">Correo electronico</label>\\r\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" placeholder=\\\"Correo electronico\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"exampleInputPassword1\\\">Contraseña</label>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Contraseña\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            Recordar mis datos\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"Ingresar()\\\">Ingresar</button>\\r\\n        </form>\\r\\n  </div>\\r\\n</div> -->\\r\\n\\r\\n<nb-layout >\\r\\n\\r\\n  <nb-layout-column style=\\\"background-color: rgba(0,204,230,1);\\\">\\r\\n    <!-- <nb-card-header>\\r\\n      <h2 class=\\\"title\\\">Login</h2>\\r\\n      <small class=\\\"form-text sub-title\\\">Hola! Ingresa con tu Email y Password</small>\\r\\n    </nb-card-header> -->\\r\\n    <nb-card style=\\\"background-color: rgba(255,255,255,1);\\\">\\r\\n      <nb-card-body>\\r\\n        \\r\\n        \\r\\n        <div class=\\\"flex-centered col-xl-4 col-lg-6 col-md-8 col-sm-12\\\">\\r\\n\\r\\n          <img src=\\\"assets/images/final-1.png\\\" alt=\\\"\\\" height=\\\"220px\\\" width=\\\"310px\\\" style=\\\"display:block; margin:auto; border-radius: 7px;\\\"/>\\r\\n          <br>\\r\\n          <h2 class=\\\"title\\\" style=\\\"color: rgba(0,0,0,1);\\\">INICIAR SESIÓN</h2>\\r\\n          <!-- <small class=\\\"form-text sub-title\\\">Para acceder ingresa tu Email y Password</small> -->\\r\\n\\r\\n          <form (ngSubmit)=\\\"Ingresar()\\\" #form=\\\"ngForm\\\" autocomplete=\\\"nope\\\">\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"input-email\\\" style=\\\"color: rgba(0,0,0,1);\\\">EMAIL</label>\\r\\n                <input name=\\\"email\\\" [(ngModel)]=\\\"email\\\" id=\\\"input-email\\\" pattern=\\\".+@.+..+\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" style=\\\"background-color: rgba(210,210,210,1);\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"input-password\\\" style=\\\"color: rgba(0,0,0,1);\\\">PASSWORD</label>\\r\\n              <input name=\\\"password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" id=\\\"input-password\\\" class=\\\"form-control\\\" placeholder=\\\"\\\"  style=\\\"background-color: rgba(210,210,210,1);\\\"> \\r\\n            </div>\\r\\n\\r\\n            <button [disabled]=\\\"submitted || !form.valid\\\" class=\\\"btn btn-block btn-hero-success\\\"                [class.btn-pulse]=\\\"submitted\\\">INGRESAR </button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </nb-card-body>\\r\\n    </nb-card>\\r\\n  </nb-layout-column>\\r\\n</nb-layout>\\r\\n\\r\\n<toaster-container [toasterconfig]=\\\"config\\\"></toaster-container>\\r\\n\\r\\n<div class=\\\"my-container\\\">\\r\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '4px' }\\\"></ngx-loading>\\r\\n</div> \\r\\n\\r\\n\\r\\n\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/graf/angular/src/app/pages-simples/loginf/loginf.component.html\n// module id = ../../../../../src/app/pages-simples/loginf/loginf.component.html\n// module chunks = pages-simples.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This is a starting point where we declare the maps of themes and globally available functions/mixins\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n:host /deep/ nb-layout .layout .layout-container .content .columns nb-layout-column {\\n  padding: 2.5rem; }\\n\\n:host /deep/ nb-card {\\n  height: calc(100vh - 2 * 2.5rem); }\\n\\n:host /deep/ nb-card {\\n  margin: 0; }\\n\\n:host /deep/ .flex-centered {\\n  margin: auto; }\\n\\n:host /deep/ nb-card-body {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex; }\\n\\n@media (max-width: 550px) {\\n  :host /deep/ /deep/ nb-layout .layout .layout-container .content .columns nb-layout-column {\\n    padding: 0; }\\n  :host /deep/ nb-card {\\n    border-radius: 0;\\n    height: 100vh; } }\\n\\n:host /deep/ nb-card {\\n  background-color: rgba(5, 26, 63, 0.86);\\n  box-shadow: 0 8px 20px 0 rgba(5, 27, 63, 0.6); }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/graf/angular/src/app/pages-simples/loginf/loginf.component.scss\n// module id = ../../../../../src/app/pages-simples/loginf/loginf.component.scss\n// module chunks = pages-simples.module","import { Component, OnInit } from '@angular/core';\r\nimport { NbSpinnerService, NbThemeService } from '@nebular/theme';\r\nimport { NbJSThemeOptions } from '@nebular/theme/services/js-themes/theme.options';\r\nimport { RouterModule, Routes, Router, ActivatedRoute } from '@angular/router';\r\n\r\n//Mis imports\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { RutaBaseService } from '../../services/ruta-base/ruta-base.service';\r\n\r\nimport { ToasterService, ToasterConfig, Toast, BodyOutputType } from 'angular2-toaster';\r\nimport 'style-loader!angular2-toaster/toaster.css';\r\n\r\n@Component({\r\n  selector: 'ngx-loginf',\r\n  styleUrls: ['./loginf.component.scss'],\r\n  templateUrl: './loginf.component.html',\r\n  //template: \"\\n    <div>\\n      <h2 class=\\\"title\\\">Sign In</h2>\\n      <small class=\\\"form-text sub-title\\\">Hello! Sign in with your username or email</small>\\n\\n      <form (ngSubmit)=\\\"login()\\\" #form=\\\"ngForm\\\" autocomplete=\\\"nope\\\">\\n\\n        <div *ngIf=\\\"showMessages.error && errors && errors.length > 0 && !submitted\\\"\\n             class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n          <div><strong>Oh snap!</strong></div>\\n          <div *ngFor=\\\"let error of errors\\\">{{ error }}</div>\\n        </div>\\n\\n        <div *ngIf=\\\"showMessages.success && messages && messages.length > 0 && !submitted\\\"\\n             class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n          <div><strong>Hooray!</strong></div>\\n          <div *ngFor=\\\"let message of messages\\\">{{ message }}</div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"input-email\\\" class=\\\"sr-only\\\">Email address</label>\\n          <input name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" id=\\\"input-email\\\" pattern=\\\".+@.+..+\\\"\\n                 class=\\\"form-control\\\" placeholder=\\\"Email address\\\" #email=\\\"ngModel\\\"\\n                 [class.form-control-danger]=\\\"email.invalid && email.touched\\\" autofocus\\n                 [required]=\\\"getConfigValue('forms.validation.email.required')\\\">\\n          <small class=\\\"form-text error\\\" *ngIf=\\\"email.invalid && email.touched && email.errors?.required\\\">\\n            Email is required!\\n          </small>\\n          <small class=\\\"form-text error\\\"\\n                 *ngIf=\\\"email.invalid && email.touched && email.errors?.pattern\\\">\\n            Email should be the real one!\\n          </small>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"input-password\\\" class=\\\"sr-only\\\">Password</label>\\n          <input name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" id=\\\"input-password\\\"\\n                 class=\\\"form-control\\\" placeholder=\\\"Password\\\" #password=\\\"ngModel\\\"\\n                 [class.form-control-danger]=\\\"password.invalid && password.touched\\\"\\n                 [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n                 [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n                 [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\">\\n          <small class=\\\"form-text error\\\" *ngIf=\\\"password.invalid && password.touched && password.errors?.required\\\">\\n            Password is required!\\n          </small>\\n          <small\\n            class=\\\"form-text error\\\"\\n            *ngIf=\\\"password.invalid && password.touched && (password.errors?.minlength || password.errors?.maxlength)\\\">\\n            Password should contains\\n            from {{ getConfigValue('forms.validation.password.minLength') }}\\n            to {{ getConfigValue('forms.validation.password.maxLength') }}\\n            characters\\n          </small>\\n        </div>\\n\\n        <div class=\\\"form-group accept-group col-sm-12\\\">\\n          <nb-checkbox name=\\\"rememberMe\\\" [(ngModel)]=\\\"user.rememberMe\\\">Remember me</nb-checkbox>\\n          <a class=\\\"forgot-password\\\" routerLink=\\\"../request-password\\\">Forgot Password?</a>\\n        </div>\\n\\n        <button [disabled]=\\\"submitted || !form.valid\\\" class=\\\"btn btn-block btn-hero-success\\\"\\n                [class.btn-pulse]=\\\"submitted\\\">\\n          Sign In\\n        </button>\\n      </form>\\n\\n      <div class=\\\"links\\\">\\n        <small class=\\\"form-text\\\">Or connect with:</small>\\n\\n        <div class=\\\"socials\\\">\\n          <a href=\\\"https://github.com/akveo\\\" target=\\\"_blank\\\" class=\\\"socicon-github\\\"></a>\\n          <a href=\\\"https://www.facebook.com/akveo/\\\" target=\\\"_blank\\\" class=\\\"socicon-facebook\\\"></a>\\n          <a href=\\\"https://twitter.com/akveo_inc\\\" target=\\\"_blank\\\" class=\\\"socicon-twitter\\\"></a>\\n        </div>\\n\\n        <small class=\\\"form-text\\\">\\n          Don't have an account? <a routerLink=\\\"../register\\\"><strong>Sign Up</strong></a>\\n        </small>\\n      </div>\\n    </div>\\n  \",\r\n})\r\nexport class LoginfComponent implements OnInit {\r\n\r\n\t//----Alertas---<\r\n\tconfig: ToasterConfig;\r\n\r\n\tposition = 'toast-top-right';\r\n\tanimationType = 'fade';\r\n\ttitle = 'HI there!';\r\n\tcontent = `I'm cool toaster!`;\r\n\ttimeout = 5000;\r\n\ttoastsLimit = 5;\r\n\ttype = 'default'; // 'default', 'info', 'success', 'warning', 'error'\r\n\r\n\tisNewestOnTop = true;\r\n\tisHideOnClick = true;\r\n\tisDuplicatesPrevented = false;\r\n\tisCloseButton = true;\r\n\t//----Alertas--->\r\n\r\n\temail= ''\r\n\tpassword='';\r\n\tprivate data:any;\r\n\tpublic loading = false;\r\n\r\n\tsubmitted = false;\r\n\r\n\tconstructor( private toasterService: ToasterService,\r\n\t\t\t\t private http: HttpClient,\r\n\t\t\t\t private rutaService: RutaBaseService,\r\n\t\t\t\t private router: Router,\r\n\t\t\t\t private route: ActivatedRoute,\r\n\t\t\t\t public nbspinnerservice:NbSpinnerService,\r\n\t\t\t\t public themeService:NbThemeService)\r\n\t{\r\n\r\n\t\t//nbspinnerservice.load();\r\n\t\t//nbspinnerservice.clear();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.themeService.changeTheme('cosmic');\r\n\t\t//this.themeService.changeTheme('default');\r\n\r\n\t\t//console.log(this.router.url);\r\n\r\n\t\tlet OneSignal = window['OneSignal'] || [];\r\n\r\n\t\tOneSignal.push(function() {\r\n\t      /* These examples are all valid */\r\n\t      OneSignal.getUserId(function(userId) {\r\n\t      \tconsole.log(userId);\r\n\t        localStorage.setItem('mouvers_token_notificacion', userId);\r\n\t        if (!userId) {\r\n\t        \tconsole.log('Register For Push');\r\n\t        \tOneSignal.push([\"registerForPushNotifications\"]);\r\n\t        }\r\n\t      });\r\n\t    });\r\n\t    \r\n\t}\r\n\r\n\tprivate showToast(type: string, title: string, body: string) {\r\n\t    this.config = new ToasterConfig({\r\n\t      positionClass: this.position,\r\n\t      timeout: this.timeout,\r\n\t      newestOnTop: this.isNewestOnTop,\r\n\t      tapToDismiss: this.isHideOnClick,\r\n\t      preventDuplicates: this.isDuplicatesPrevented,\r\n\t      animation: this.animationType,\r\n\t      limit: this.toastsLimit,\r\n\t    });\r\n\t    const toast: Toast = {\r\n\t      type: type,\r\n\t      title: title,\r\n\t      body: body,\r\n\t      timeout: this.timeout,\r\n\t      showCloseButton: this.isCloseButton,\r\n\t      bodyOutputType: BodyOutputType.TrustedHtml,\r\n\t    };\r\n\t    this.toasterService.popAsync(toast);\r\n\t}\r\n\r\n\tIngresar(){\r\n\t\t\r\n\t  \tthis.loading = true;\r\n\t  \tthis.submitted = true;\r\n\t   \t//this.router.navigateByUrl('/pages/dashboard');\r\n\r\n\t   \tconsole.log(localStorage.getItem('mouvers_token_notificacion'));\r\n\t    var datos= {\r\n\t    \temail: this.email,\r\n\t    \tpassword: this.password,\r\n\t    \ttoken_notificacion: localStorage.getItem('mouvers_token_notificacion')\r\n\t    }\r\n\t    \r\n\t\tthis.http.post(this.rutaService.getRutaApi()+'login/web', datos)\r\n\t\t.toPromise()\r\n\t\t.then(\r\n\t\t  data => { // Success\r\n\t\t    console.log(data);\r\n\t\t    this.data=data;\r\n\t\t    localStorage.setItem('mouvers_token', this.data.token);\r\n\t\t    localStorage.setItem('mouvers_user_id', this.data.user.id);\r\n\t\t    localStorage.setItem('mouvers_user_nombre', this.data.user.nombre);\r\n\t\t    localStorage.setItem('mouvers_user_imagen', this.data.user.imagen);\r\n\t\t    localStorage.setItem('mouvers_user_tipo', this.data.user.tipo_usuario);\r\n\t\t   // localStorage.setItem('mouvers_token_notificacion', this.data.user.token_notificacion);\r\n\r\n\t\t    if (this.data.user.tipo_usuario == 4) {\r\n\t\t    \tlocalStorage.setItem('mouvers_establecimiento_id', this.data.user.establecimiento.id);\r\n\t\t    }else{\r\n\t\t    \tlocalStorage.setItem('mouvers_establecimiento_id', '');\r\n\t\t    }\r\n\t\t    \r\n\t\t    if (this.data.user.tipo_usuario == 1) {\r\n\t\t    \tthis.router.navigateByUrl('/pages/dashboard');\r\n\t\t\t\t//this.router.navigate(['pages']);\r\n\t\t    }else if(this.data.user.tipo_usuario == 4){\r\n\t\t    \tthis.router.navigateByUrl('/pages/mi/dashboard');\r\n\t\t\t\t//this.router.navigate(['pages']);\r\n\t\t    }\r\n\t\t    \r\n\t\t    this.loading = false;\r\n\r\n\t\t },\r\n\t\t  msg => { // Error\r\n\r\n\t\t    console.log(msg)\r\n\t\t  \t//console.log(msg.error.error);\r\n\t\t  \t//alert('Error: '+msg.error.error);\r\n\t\t  \tthis.showToast('error', 'Error!', msg.error.error);\r\n\t\t  \tthis.loading = false;\r\n\t\t  \tthis.submitted = false;\r\n\t\t  }\r\n\t\t);\r\n  \t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/graf/angular/src/app/pages-simples/loginf/loginf.component.ts","import { NgModule } from '@angular/core';\r\n\r\n//Mis imports\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { LoginfComponent } from './loginf.component';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { ToasterModule } from 'angular2-toaster';\r\n\r\nimport { LoadingModule, ANIMATION_TYPES  } from 'ngx-loading';\r\n\r\n@NgModule({\r\n  imports: [\r\n  \tToasterModule,\r\n    ThemeModule,\r\n    LoadingModule.forRoot({\r\n        animationType: ANIMATION_TYPES.chasingDots,\r\n        backdropBackgroundColour: 'rgba(0,0,0,0.7)', \r\n        backdropBorderRadius: '4px',\r\n        primaryColour: '#ffffff', \r\n        secondaryColour: '#ffffff', \r\n        tertiaryColour: '#ffffff',\r\n        fullScreenBackdrop: true\r\n    })\r\n  ],\r\n  declarations: [\r\n    LoginfComponent,\r\n    \r\n  ],\r\n})\r\nexport class LoginfModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/graf/angular/src/app/pages-simples/loginf/loginf.module.ts","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PagesSimplesComponent } from './pages-simples.component';\r\nimport { LoginfComponent } from './loginf/loginf.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: PagesSimplesComponent,\r\n  children: [{\r\n    path: 'loginf',\r\n    component: LoginfComponent,\r\n  }, {\r\n    path: '',\r\n    redirectTo: 'loginf',\r\n    pathMatch: 'full',\r\n  }],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PagesSimplesRoutingModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/graf/angular/src/app/pages-simples/pages-simples-routing.module.ts","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-pages-simples',\r\n  template: `\r\n      <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class PagesSimplesComponent {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/graf/angular/src/app/pages-simples/pages-simples.component.ts","import { NgModule } from '@angular/core';\r\n\r\n//Mis imports\r\nimport { PagesSimplesComponent } from './pages-simples.component';\r\nimport { LoginfModule } from './loginf/loginf.module';\r\nimport { PagesSimplesRoutingModule } from './pages-simples-routing.module';\r\nimport { ThemeModule } from '../@theme/theme.module';\r\n\r\n//import { ToasterModule } from 'angular2-toaster';\r\n\r\nconst PAGESSIMPLES_COMPONENTS = [\r\n  PagesSimplesComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n  \t//ToasterModule,\r\n    PagesSimplesRoutingModule,\r\n    ThemeModule,\r\n    LoginfModule,\r\n  ],\r\n  declarations: [\r\n    ...PAGESSIMPLES_COMPONENTS,\r\n  ],\r\n})\r\nexport class PagesSimplesModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/graf/angular/src/app/pages-simples/pages-simples.module.ts"],"sourceRoot":"webpack:///"}